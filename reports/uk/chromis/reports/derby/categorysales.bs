/*
**    Chromis POS  - The New Face of Open Source POS
**    Copyright (c)2015-2016
**    http://www.chromis.co.uk
**
**    This file is part of Chromis POS Version V0.60.2 beta
**
**    Chromis POS is free software: you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation, either version 3 of the License, or
**    (at your option) any later version.
**
**    Chromis POS is distributed in the hope that it will be useful,
**    but WITHOUT ANY WARRANTY; without even the implied warranty of
**    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**    GNU General Public License for more details.
**
**    You should have received a copy of the GNU General Public License
**    along with Chromis POS.  If not, see <http://www.gnu.org/licenses/>
**
**    Derby Reports Version
*/


report = new uk.chromis.pos.reports.PanelReportBean();

report.setTitleKey("Menu.CategorySales");
report.setReport("/uk/chromis/reports/derby/categorysales");
report.setResourceBundle("uk/chromis/reports/report_messages");


report.setSentence("SELECT CATEGORIES.ID, CATEGORIES.NAME, " +
"SUM(TICKETLINES.UNITS) AS QTY, " +
"SUM(TICKETLINES.PRICE * TICKETLINES.UNITS) AS CATPRICE, " +
"SUM((PRODUCTS.PRICESELL * TICKETLINES.UNITS)-((CASE WHEN ISVPRICE = TRUE THEN 1 ELSE 0 END) * (TICKETLINES.PRICE * TICKETLINES.UNITS))) AS DISC, " +
"SUM((TICKETLINES.PRICE * TAXES.RATE)* TICKETLINES.UNITS) AS CATTAX, " +
"SUM((TICKETLINES.PRICE * TICKETLINES.UNITS) + ((TICKETLINES.PRICE * TAXES.RATE)* TICKETLINES.UNITS)) AS CATTOTAL " +
"FROM (TICKETS INNER JOIN RECEIPTS ON TICKETS.ID = RECEIPTS.ID) INNER JOIN ((CATEGORIES INNER JOIN PRODUCTS ON CATEGORIES.ID = PRODUCTS.CATEGORY) INNER JOIN (TAXES INNER JOIN TICKETLINES ON TAXES.ID = TICKETLINES.TAXID) ON PRODUCTS.ID = TICKETLINES.PRODUCT) ON TICKETS.ID = TICKETLINES.TICKET " +
"WHERE ?(QBF_FILTER) " +
"GROUP BY CATEGORIES.ID, CATEGORIES.NAME " +
"ORDER BY CATEGORIES.NAME");;

report.addParameter("RECEIPTS.DATENEW");
report.addParameter("RECEIPTS.DATENEW");
report.addParameter("RECEIPTS.SITEGUID");

paramdates = new uk.chromis.pos.reports.JParamsDatesInterval();

paramdates.setStartDate(uk.chromis.beans.DateUtils.getToday());
paramdates.setEndDate(uk.chromis.beans.DateUtils.getTodayMinutes());

report.addQBFFilter(paramdates);

report.addField("ID", uk.chromis.data.loader.Datas.STRING);
report.addField("NAME", uk.chromis.data.loader.Datas.STRING);
report.addField("QTY", uk.chromis.data.loader.Datas.DOUBLE);
report.addField("CATPRICE", uk.chromis.data.loader.Datas.DOUBLE);
report.addField("DISC", uk.chromis.data.loader.Datas.DOUBLE);
report.addField("CATTAX", uk.chromis.data.loader.Datas.DOUBLE);
report.addField("CATTOTAL", uk.chromis.data.loader.Datas.DOUBLE);

report;