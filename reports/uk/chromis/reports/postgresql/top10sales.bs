/*
**    Chromis POS  - The New Face of Open Source POS
**    Copyright (c)2015-2016
**    http://www.chromis.co.uk
**
**    This file is part of Chromis POS Version V0.60.2 beta
**
**    Chromis POS is free software: you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation, either version 3 of the License, or
**    (at your option) any later version.
**
**    Chromis POS is distributed in the hope that it will be useful,
**    but WITHOUT ANY WARRANTY; without even the implied warranty of
**    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**    GNU General Public License for more details.
**
**    You should have received a copy of the GNU General Public License
**    along with Chromis POS.  If not, see <http://www.gnu.org/licenses/>
**
**    PosgreSQL Reports Version
*/



report = new uk.chromis.pos.reports.PanelReportBean();

report.setTitleKey("Menu.Top10Sales");
report.setReport("/uk/chromis/reports/postgresql/top10sales");
report.setResourceBundle("uk/chromis/reports/report_messages");

report.setSentence(
            "SELECT " +
			"PRODUCTS.REFERENCE,PRODUCTS.NAME,PRODUCTS.PRICEBUY,PRODUCTS.PRICESELL, " +
			"SUM(TICKETLINES.UNITS) AS UNITS, " +
                        "SUM(TICKETLINES.PRICE * TICKETLINES.UNITS) AS SUBTOTAL, " +
                        "SUM((TICKETLINES.PRICE * TICKETLINES.UNITS) * TAXES.RATE) As TAXES, " +
                        "SUM(TICKETLINES.PRICE * TICKETLINES.UNITS) + SUM((TICKETLINES.PRICE * TICKETLINES.UNITS) * TAXES.RATE) AS GROSSTOTAL " +
			"FROM TICKETLINES " +
			"LEFT OUTER JOIN PRODUCTS ON TICKETLINES.PRODUCT = PRODUCTS.ID " +
			"LEFT OUTER JOIN TICKETS ON TICKETS.ID = TICKETLINES.TICKET " +
                        "LEFT OUTER JOIN RECEIPTS ON RECEIPTS.ID = TICKETS.ID, TAXES " +
			"WHERE RECEIPTS.ID = TICKETS.ID " +
                        "AND TICKETS.ID = TICKETLINES.TICKET " +
                        "AND TICKETLINES.PRODUCT = PRODUCTS.ID " +
                        "AND TICKETLINES.TAXID = TAXES.ID " +
                        "AND ?(QBF_FILTER) " +
			"GROUP BY PRODUCTS.REFERENCE, PRODUCTS.NAME,PRODUCTS.PRICEBUY,PRODUCTS.PRICESELL " +
			"ORDER BY GROSSTOTAL DESC " +
			"FETCH FIRST 10 ROWS ONLY");
			
report.addParameter("RECEIPTS.DATENEW");
report.addParameter("RECEIPTS.DATENEW");
report.addParameter("RECEIPTS.SITEGUID");

paramdates = new uk.chromis.pos.reports.JParamsDatesInterval();

paramdates.setStartDate(uk.chromis.beans.DateUtils.getToday());
paramdates.setEndDate(uk.chromis.beans.DateUtils.getTodayMinutes());

report.addQBFFilter(paramdates);

report.addField("REFERENCE", uk.chromis.data.loader.Datas.STRING);
report.addField("NAME", uk.chromis.data.loader.Datas.STRING);
report.addField("UNITS", uk.chromis.data.loader.Datas.DOUBLE);
report.addField("PRICEBUY", uk.chromis.data.loader.Datas.DOUBLE);
report.addField("PRICESELL", uk.chromis.data.loader.Datas.DOUBLE);
report.addField("SUBTOTAL", uk.chromis.data.loader.Datas.DOUBLE);
report.addField("TAXES", uk.chromis.data.loader.Datas.DOUBLE);
report.addField("GROSSTOTAL", uk.chromis.data.loader.Datas.DOUBLE);
report;

