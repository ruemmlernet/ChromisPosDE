/*
**    Chromis POS  - The New Face of Open Source POS
**    Copyright (c)2015-2016
**    http://www.chromis.co.uk
**
**    This file is part of Chromis POS Version V0.60.2 beta
**
**    Chromis POS is free software: you can redistribute it and/or modify
**    it under the terms of the GNU General Public License as published by
**    the Free Software Foundation, either version 3 of the License, or
**    (at your option) any later version.
**
**    Chromis POS is distributed in the hope that it will be useful,
**    but WITHOUT ANY WARRANTY; without even the implied warranty of
**    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
**    GNU General Public License for more details.
**
**    You should have received a copy of the GNU General Public License
**    along with Chromis POS.  If not, see <http://www.gnu.org/licenses/>
**
**
 */
package uk.chromis.pos.xsite;

import java.awt.Component;
import java.awt.Dialog;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.Window;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import uk.chromis.data.loader.Session;
import uk.chromis.pos.forms.AppConfig;
import uk.chromis.pos.ticket.PlayWave;
import uk.chromis.pos.util.DbUtils;

public class XSiteStockCheck extends javax.swing.JDialog {

    private Connection con;
    private ResultSet rs;
    private Statement stmt;
    private String ID;
    private String SQL;
    private Session s;

    private XSiteStockCheck(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
    }

    private XSiteStockCheck(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
    }

    private void init(Session s) {
        this.s = s;
        initComponents();
        setTitle("Product Check");
        getRootPane().setDefaultButton(jBtnCheck);
        // configure the table sizes
        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) jStockTable.getTableHeader().getDefaultRenderer();
        renderer.setHorizontalAlignment(SwingConstants.LEFT);
        jStockTable.getColumnModel().getColumn(0).setPreferredWidth(280);
        jStockTable.getColumnModel().getColumn(1).setPreferredWidth(15);

        //get sites details from database        
        //populate combo box
        try {
            con = s.getConnection();
        } catch (Exception e) {

        }
        
    }

    public static XSiteStockCheck getXSite(Component parent, Session s) {
        Window window = SwingUtilities.getWindowAncestor(parent);
        XSiteStockCheck myMsg;
        if (window instanceof Frame) {
            myMsg = new XSiteStockCheck((Frame) window, true);
        } else {
            myMsg = new XSiteStockCheck((Dialog) window, true);
        }
        myMsg.init(s);
        myMsg.applyComponentOrientation(parent.getComponentOrientation());
        return myMsg;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jBarcode = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jStockTable = new javax.swing.JTable();
        jBtnCheck = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jReference = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jProductName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jCategory = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPriceSellTaxed = new javax.swing.JTextField();
        jRabatt = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jBarcode2 = new javax.swing.JTextField();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("pos_messages"); // NOI18N
        jLabel3.setText(bundle.getString("label.prodbarcode")); // NOI18N

        jBarcode.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jBarcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jBarcodeKeyPressed(evt);
            }
        });

        jStockTable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jStockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Store", "Units"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jStockTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jStockTable);

        jBtnCheck.setText(bundle.getString("Button.CheckProd"));
        jBtnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCheckActionPerformed(evt);
            }
        });

        jLabel1.setText("Referenz");

        jReference.setEditable(false);
        jReference.setFocusable(false);

        jLabel2.setText("Name");

        jProductName.setEditable(false);
        jProductName.setFocusable(false);

        jLabel4.setText("Kategorie");

        jCategory.setEditable(false);
        jCategory.setFocusable(false);

        jLabel5.setText("Verkaufspreis");

        jPriceSellTaxed.setEditable(false);
        jPriceSellTaxed.setFocusable(false);

        jRabatt.setText("rabattf√§hig");
        jRabatt.setFocusable(false);

        jLabel6.setText("Barcode");

        jBarcode2.setEditable(false);
        jBarcode2.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(jBtnCheck))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jRabatt))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel5)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jReference, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBarcode2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPriceSellTaxed, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3))
                    .addComponent(jBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnCheck))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6))
                    .addComponent(jBarcode2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jReference, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jPriceSellTaxed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(jRabatt)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCheckActionPerformed
        // TODO add your handling code here:
        String barcode = jBarcode.getText();
        String productID = "";
        Double units;
        DecimalFormat df2 = new DecimalFormat("0.00");
        
        if ("".equals(barcode)) {
            return;
        }
        
        try {
            stmt = (Statement) con.createStatement();
            rs = stmt.executeQuery("select p.ID, p.REFERENCE, p.CODE, p.NAME, p.PRICESELL, p.CANDISCOUNT, " +
                                    "       c.name KATEGORIE, (select rate from taxes t where t.category = p.taxcat limit 1) TAX, " +
                                    "       (select units from stockcurrent s where s.product = p.id limit 1) STOCK " +
                                    "from products p left join categories c on c.ID = p.CATEGORY " +
                                    "where code = '" + barcode + "'");
            if (rs.next()) {
                jBarcode2.setText(barcode);
                jReference.setText(rs.getString("REFERENCE"));
                jProductName.setText(rs.getString("NAME"));
                jCategory.setText(rs.getString("KATEGORIE"));
                jPriceSellTaxed.setText(df2.format(rs.getDouble("PRICESELL") * (1 + rs.getDouble("TAX"))));
                jRabatt.setSelected((rs.getInt("CANDISCOUNT") == 1));
                productID = rs.getString("ID");
                new PlayWave("beep.wav").start(); // playing WAVE file 
            } else {
                jBarcode2.setText("");
                jReference.setText("");
                jProductName.setText("");
                jCategory.setText("");
                jPriceSellTaxed.setText("");
                jRabatt.setSelected(false);
                productID = "#-$#";
                if (AppConfig.getInstance().getBoolean("till.customsounds")) {
                    new PlayWave("error.wav").start(); // playing WAVE file 
                } else {
                    Toolkit.getDefaultToolkit().beep();
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(XSiteStockCheck.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Clear the table if there is any data
        DefaultTableModel model = (DefaultTableModel) jStockTable.getModel();
        int rows = model.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            model.removeRow(i);
        }

        try {
            con = s.getConnection();
            stmt = (Statement) con.createStatement();
            rs = stmt.executeQuery("select L.NAME, S.UNITS from stockcurrent s " +
                                   "       left join locations L ON L.ID = S.LOCATION where S.PRODUCT = '"+productID+"'");
            while (rs.next()) {
                units = rs.getDouble("UNITS");
                Object row[] = {rs.getString("NAME"), units};
                model = (DefaultTableModel) jStockTable.getModel();
                model.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(XSiteStockCheck.class.getName()).log(Level.SEVERE, null, ex);
        }

        jBarcode.setText("");
        jBarcode.requestFocus();
    }//GEN-LAST:event_jBtnCheckActionPerformed

    private void jBarcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBarcodeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 27) {
            dispose();
        }
    }//GEN-LAST:event_jBarcodeKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(XSiteStockCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(XSiteStockCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(XSiteStockCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XSiteStockCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                XSiteStockCheck dialog = new XSiteStockCheck(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jBarcode;
    private javax.swing.JTextField jBarcode2;
    private javax.swing.JButton jBtnCheck;
    private javax.swing.JTextField jCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jPriceSellTaxed;
    private javax.swing.JTextField jProductName;
    private javax.swing.JCheckBox jRabatt;
    private javax.swing.JTextField jReference;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jStockTable;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
